name: Python application

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies (Linux and macOS)
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8 
        pip install -r requirements.txt
      shell: bash
      if: runner.os != 'Windows'

    - name: Install dependencies (Windows)
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
      shell: pwsh
      if: runner.os == 'Windows'

    - name: Lint with flake8 (Linux and macOS)
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: bash
      if: runner.os != 'Windows'

    - name: Lint with flake8 on Windows
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      shell: pwsh
      if: runner.os == 'Windows'

    - name: Test with pytest
      run: |
        pytest
      shell: bash
      if: runner.os != 'Windows'

    - name: Test with pytest on Windows
      run: |
        pytest
      shell: pwsh
      if: runner.os == 'Windows'
